{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Feedback/Feedback.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","FeedbackBtn","name","onLeaveFeedback","type","onClick","Feedback","options","map","option","id","Statistics","good","neutral","bad","total","positive","feedback__counts","item","Notification","message","note","App","state","handleFeedback","e","target","textContent","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82e010bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__counts\":\"Statistics_feedback__counts__1D1T2\",\"item\":\"Statistics_item__ezglx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__NQfh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackBtn\":\"Feedback_FeedbackBtn__39-Kd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Notification_note__qJ9E-\"};","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.Section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport s from './Feedback.module.css';\nimport PropTypes from 'prop-types';\n\nconst Feedback = ({ options, onLeaveFeedback }) => (\n  <div>\n    {options.map(option => (\n      <FeedbackBtn\n        key={option.id}\n        name={option.name}\n        onLeaveFeedback={onLeaveFeedback}\n      />\n    ))}\n  </div>\n);\n\nconst FeedbackBtn = ({ name, onLeaveFeedback }) => {\n  return (\n    <button type=\"button\" className={s.FeedbackBtn} onClick={onLeaveFeedback}>\n      {name}\n    </button>\n  );\n};\n\nFeedback.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default Feedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\n// const Statistics = ({ feedbacks, count }) => (\n//   <ul className={s.feedback__counts}>\n//     {feedbacks.map(item => (\n//       <li key={item.id} name={item.name}>\n//         {item.name}: {count}\n//       </li>\n//     ))}\n//   </ul>\n// );\n\nconst Statistics = ({ good, neutral, bad, total, positive }) => (\n  <ul className={s.feedback__counts}>\n    <li className={s.item}>Good: {good}</li>\n    <li className={s.item}>Neutral: {neutral}</li>\n    <li className={s.item}>Bad: {bad}</li>\n    <li className={s.item}>Total: {total}</li>\n    <li className={s.item}>Positive feedback: {positive}%</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={s.note}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport options from './data/options.json';\nimport Section from './components/Section/Section';\nimport Feedback from './components/Feedback/Feedback';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = e => {\n    const name = e.target.textContent;\n    this.setState(prevState => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  // countFeedback = e => {\n  //   const name = e.target.textContent;\n  //   console.log(this.state[name]);\n  //   return name;\n  // };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positive = this.countPositiveFeedbackPercentage();\n    return (\n      <div className=\"App\">\n        <Section title={'Please leave feedback'}>\n          <Feedback options={options} onLeaveFeedback={this.handleFeedback} />\n        </Section>\n        <Section title={'Statistics'}>\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positive={positive}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}